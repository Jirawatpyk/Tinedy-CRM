// Tinedy CRM Database Schema
// Generated by Database Agent (Alex)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================================================
// ENUMS สำหรับระบบ CRM
// =============================================================================

enum CustomerStatus {
  ACTIVE    // ลูกค้าที่ใช้งานอยู่
  INACTIVE  // ลูกค้าที่ไม่ใช้งาน
  BLOCKED   // ลูกค้าที่ถูกบล็อก
}

enum ServiceType {
  CLEANING  // บริการทำความสะอาด
  TRAINING  // บริการฝึกอบรม
}

enum JobStatus {
  NEW         // งานใหม่ที่ยังไม่ได้รับมอบหมาย
  ASSIGNED    // งานที่ถูกมอบหมายแล้ว
  IN_PROGRESS // งานที่กำลังดำเนินการ
  DONE        // งานที่เสร็จเสร้นแล้ว
  CANCELLED   // งานที่ยกเลิก
}

enum Priority {
  LOW     // ลำดับความสำคัญต่ำ
  MEDIUM  // ลำดับความสำคัญปานกลาง
  HIGH    // ลำดับความสำคัญสูง
  URGENT  // เร่งด่วน
}

enum UserRole {
  ADMIN      // ผู้ดูแลระบบ
  OPERATIONS // ทีมปฏิบัติการ
  TRAINING   // ทีมฝึกอบรม
  QC_MANAGER // ผู้จัดการคุณภาพ
}

enum QCStatus {
  PENDING     // รอตรวจสอบ
  IN_PROGRESS // กำลังตรวจสอบ
  PASSED      // ผ่านการตรวจสอบ
  FAILED      // ไม่ผ่านการตรวจสอบ
  NEEDS_REVIEW // ต้องทบทวน
}

enum TrainingStatus {
  AWAITING_DOCUMENTS   // รอเอกสาร
  DOCUMENTS_RECEIVED   // ได้รับเอกสารแล้ว
  TRAINING_IN_PROGRESS // กำลังฝึกอบรม
  TRAINING_COMPLETED   // ฝึกอบรมเสร็จแล้ว
  COMPLETED           // เสร็จสิ้นทั้งหมด
}

enum WebhookStatus {
  RECEIVED   // ได้รับข้อมูล
  PROCESSING // กำลังประมวลผล
  PROCESSED  // ประมวลผลเสร็จแล้ว
  FAILED     // ประมวลผลไม่สำเร็จ
  RETRY_NEEDED // ต้องลองใหม่
}

// =============================================================================
// CORE ENTITIES - หน่วยงานหลักของระบบ
// =============================================================================

model Customer {
  id             String         @id @default(uuid()) // ใช้ UUID แทน cuid()
  name           String                              // ชื่อลูกค้า (required)
  phone          String         @unique              // หมายเลขโทรศัพท์ (unique, required)
  address        String?                             // ที่อยู่ (optional)
  contactChannel String                              // ช่องทางการติดต่อ (required)
  status         CustomerStatus @default(ACTIVE)     // สถานะลูกค้า
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // Relations - ความสัมพันธ์กับตารางอื่น
  jobs           Job[]

  // Indexes สำหรับ Performance และ Search Optimization
  @@index([status])
  @@index([createdAt])
  @@index([name]) // สำหรับการค้นหาตามชื่อ
  @@index([phone]) // สำหรับการค้นหาตามเบอร์โทรศัพท์
  @@index([contactChannel]) // สำหรับการค้นหาตามช่องทางการติดต่อ

  // Composite indexes สำหรับ complex queries
  @@index([name, status]) // ค้นหาชื่อพร้อมกรองสถานะ
  @@index([phone, status]) // ค้นหาเบอร์โทรพร้อมกรองสถานะ
  @@index([status, createdAt]) // กรองสถานะเรียงตามวันที่
  @@index([contactChannel, status]) // กรองตามช่องทางและสถานะ

  // Text search optimization indexes สำหรับ PostgreSQL
  // เพิ่ม computed indexes สำหรับ case-insensitive search ใน migration
  // Note: GIN indexes จะถูกสร้างใน raw SQL ใน migration file

  @@map("customers")
}

model Job {
  id              String      @id @default(uuid()) // ใช้ UUID ตาม Story 2.3
  customerId      String      // รหัสลูกค้า (Foreign Key)
  serviceType     ServiceType // ประเภทบริการ (CLEANING, TRAINING)
  scheduledDate   DateTime    // วันที่นัดหมาย (required ตาม Story 2.3)
  price           Decimal     @db.Decimal(10,2) // ราคา (2 ทศนิยม)
  status          JobStatus   @default(NEW) // สถานะงาน
  notes           String?     // บันทึกเพิ่มเติม (optional)
  assignedUserId  String?     // รหัสพนักงานที่รับผิดชอบ (optional)

  // เก็บฟิลด์เดิมไว้เพื่อ backward compatibility
  description     String?     // รายละเอียดงาน
  priority        Priority    @default(MEDIUM)
  completedAt     DateTime?   // เวลาที่เสร็จ
  n8nWorkflowId   String?     // รหัส N8N workflow
  webhookData     Json?       // ข้อมูลดิบจาก webhook
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Relations
  customer      Customer          @relation(fields: [customerId], references: [id], onDelete: Restrict)
  assignedUser  User?             @relation("AssignedJobs", fields: [assignedUserId], references: [id], onDelete: SetNull)
  qualityChecks QualityCheck[]
  training      TrainingWorkflow?
  webhookLogs   WebhookLog[]

  // Indexes สำหรับ Performance
  @@index([customerId])
  @@index([status])
  @@index([assignedUserId])
  @@index([scheduledDate]) // สำหรับการค้นหาตามวันที่นัดหมาย
  @@index([createdAt])
  @@index([priority])
  @@index([serviceType]) // สำหรับการกรองตามประเภทบริการ
  @@index([price]) // สำหรับการค้นหาตามราคา

  // Composite indexes สำหรับ query ที่ซับซ้อน
  @@index([customerId, status]) // งานของลูกค้าตามสถานะ
  @@index([assignedUserId, status]) // งานที่มอบหมายตามสถานะ
  @@index([status, priority]) // งานตามสถานะและลำดับความสำคัญ
  @@index([serviceType, status]) // งานตามประเภทบริการและสถานะ
  @@index([scheduledDate, status]) // งานตามวันที่นัดและสถานะ
  @@index([customerId, serviceType]) // งานของลูกค้าตามประเภทบริการ
  @@map("jobs")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique // อีเมลสำหรับเข้าสู่ระบบ
  password  String           // รหัสผ่านที่เข้ารหัสด้วย bcrypt
  name      String           // ชื่อผู้ใช้
  role      UserRole @default(OPERATIONS)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  assignedJobs Job[] @relation("AssignedJobs")

  // Indexes
  @@index([role])
  @@index([isActive])
  @@index([email])
  @@map("users")
}

// =============================================================================
// QUALITY CONTROL SYSTEM - ระบบควบคุมคุณภาพ
// =============================================================================

model QualityCheck {
  id          String           @id @default(cuid())
  jobId       String           // รหัสงาน
  checklistId String           // รหัสเช็คลิสต์
  status      QCStatus         @default(PENDING)
  completedBy String?          // ผู้ตรวจสอบ
  completedAt DateTime?        // เวลาที่ตรวจสอบเสร็จ
  notes       String?          // หมายเหตุการตรวจสอบ
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  // Relations
  job         Job              @relation(fields: [jobId], references: [id], onDelete: Cascade)
  checklist   QualityChecklist @relation(fields: [checklistId], references: [id], onDelete: Restrict)

  // Indexes
  @@index([jobId])
  @@index([status])
  @@index([createdAt])
  @@index([checklistId])
  @@map("quality_checks")
}

model QualityChecklist {
  id          String         @id @default(cuid())
  name        String         // ชื่อเช็คลิสต์
  description String?        // คำอธิบาย
  items       Json           // รายการเช็คลิสต์ (JSON array)
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations
  qualityChecks QualityCheck[]

  // Indexes
  @@index([isActive])
  @@index([name])
  @@map("quality_checklists")
}

// =============================================================================
// TRAINING WORKFLOW SYSTEM - ระบบการฝึกอบรม
// =============================================================================

model TrainingWorkflow {
  id                String          @id @default(cuid())
  jobId             String          @unique // งานหนึ่งมีการฝึกอบรมได้เพียงหนึ่งเดียว
  status            TrainingStatus  @default(AWAITING_DOCUMENTS)
  documentsReceived Boolean         @default(false)
  trainingCompleted Boolean         @default(false)
  notes             String?         // หมายเหตุการฝึกอบรม
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Relations
  job               Job             @relation(fields: [jobId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([status])
  @@index([createdAt])
  @@map("training_workflows")
}

// =============================================================================
// WEBHOOK & INTEGRATION SYSTEM - ระบบรับข้อมูลจากภายนอก
// =============================================================================

model WebhookLog {
  id            String        @id @default(cuid())
  source        String        // แหล่งที่มา เช่น 'N8N', 'LINE_OA'
  workflowId    String?       // รหัส workflow
  executionId   String?       // รหัสการรัน
  payload       Json          // ข้อมูลดิบที่ได้รับ
  status        WebhookStatus @default(RECEIVED)
  processedAt   DateTime?     // เวลาที่ประมวลผลเสร็จ
  errorMessage  String?       // ข้อความ error (ถ้ามี)
  createdJobId  String?       // รหัสงานที่สร้างขึ้น
  retryCount    Int           @default(0) // จำนวนครั้งที่ลองใหม่
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  createdJob    Job?          @relation(fields: [createdJobId], references: [id], onDelete: SetNull)

  // Indexes
  @@index([source])
  @@index([status])
  @@index([createdAt])
  @@index([workflowId])
  @@index([processedAt])
  @@map("webhook_logs")
}

model FailedWebhook {
  id            String    @id @default(cuid())
  originalLogId String    // รหัส webhook log ต้นฉบับ
  payload       Json      // ข้อมูลที่ประมวลผลไม่สำเร็จ
  errorDetails  String    // รายละเอียด error
  failedAt      DateTime  @default(now())
  retryAfter    DateTime? // เวลาที่จะลองใหม่
  manualReview  Boolean   @default(false) // ต้องตรวจสอบด้วยมือ

  // Indexes
  @@index([failedAt])
  @@index([manualReview])
  @@index([retryAfter])
  @@map("failed_webhooks")
}

// =============================================================================
// AUDIT SYSTEM - ระบบการติดตามการเปลี่ยนแปลง
// =============================================================================

model AuditLog {
  id        String   @id @default(cuid())
  entityType String  // ประเภทข้อมูล เช่น 'Customer', 'Job'
  entityId   String  // รหัสข้อมูล
  action     String  // การกระทำ เช่น 'CREATE', 'UPDATE', 'DELETE'
  oldValues  Json?   // ค่าเดิม (ก่อนเปลี่ยน)
  newValues  Json?   // ค่าใหม่ (หลังเปลี่ยน)
  userId     String? // ผู้ทำการเปลี่ยนแปลง
  timestamp  DateTime @default(now())

  // Indexes
  @@index([entityType, entityId])
  @@index([timestamp])
  @@index([userId])
  @@index([action])
  @@map("audit_logs")
}