// Tinedy CRM Database Schema
// Generated by Database Agent (Alex)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =============================================================================
// ENUMS สำหรับระบบ CRM
// =============================================================================

enum CustomerStatus {
  ACTIVE    // ลูกค้าที่ใช้งานอยู่
  INACTIVE  // ลูกค้าที่ไม่ใช้งาน
  BLOCKED   // ลูกค้าที่ถูกบล็อก
}

enum JobStatus {
  NEW         // งานใหม่ที่ยังไม่ได้รับมอบหมาย
  ASSIGNED    // งานที่ถูกมอบหมายแล้ว
  IN_PROGRESS // งานที่กำลังดำเนินการ
  DONE        // งานที่เสร็จแล้ว (เปลี่ยนจาก COMPLETED)
  CANCELLED   // งานที่ยกเลิก
  ON_HOLD     // งานที่หยุดชั่วคราว
}

enum ServiceType {
  CLEANING  // บริการทำความสะอาด
  TRAINING  // บริการฝึกอบรม
}

enum Priority {
  LOW     // ลำดับความสำคัญต่ำ
  MEDIUM  // ลำดับความสำคัญปานกลาง
  HIGH    // ลำดับความสำคัญสูง
  URGENT  // เร่งด่วน
}

enum UserRole {
  ADMIN      // ผู้ดูแลระบบ
  OPERATIONS // ทีมปฏิบัติการ
  TRAINING   // ทีมฝึกอบรม
  QC_MANAGER // ผู้จัดการคุณภาพ
}

enum QCStatus {
  PENDING     // รอตรวจสอบ
  IN_PROGRESS // กำลังตรวจสอบ
  PASSED      // ผ่านการตรวจสอบ
  FAILED      // ไม่ผ่านการตรวจสอบ
  NEEDS_REVIEW // ต้องทบทวน
}

enum TrainingStatus {
  AWAITING_DOCUMENTS   // รอเอกสาร
  DOCUMENTS_RECEIVED   // ได้รับเอกสารแล้ว
  TRAINING_IN_PROGRESS // กำลังฝึกอบรม
  TRAINING_COMPLETED   // ฝึกอบรมเสร็จแล้ว
  COMPLETED           // เสร็จสิ้นทั้งหมด
}

enum WebhookStatus {
  RECEIVED   // ได้รับข้อมูล
  PROCESSING // กำลังประมวลผล
  PROCESSED  // ประมวลผลเสร็จแล้ว
  FAILED     // ประมวลผลไม่สำเร็จ
  RETRY_NEEDED // ต้องลองใหม่
}

// =============================================================================
// CORE ENTITIES - หน่วยงานหลักของระบบ
// =============================================================================

model Customer {
  id             String         @id @default(cuid())
  lineUserId     String?        @unique // รหัสผู้ใช้ LINE OA
  name           String                 // ชื่อลูกค้า
  phone          String?                // หมายเลขโทรศัพท์
  email          String?                // อีเมล
  address        String?                // ที่อยู่
  notes          String?                // หมายเหตุเพิ่มเติม
  contactChannel String                 // ช่องทางการติดต่อ (LINE, PHONE, EMAIL)
  status         CustomerStatus @default(ACTIVE)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // Relations - ความสัมพันธ์กับตารางอื่น
  jobs            Job[]
  serviceHistories ServiceHistory[]

  // Indexes สำหรับ Performance
  @@index([status])
  @@index([createdAt])
  @@index([lineUserId])
  @@index([contactChannel]) // สำหรับการค้นหาตามช่องทางติดต่อ
  @@index([name]) // สำหรับการค้นหาตามชื่อ
  @@map("customers")
}

model Job {
  id              String      @id @default(cuid())
  customerId      String      // รหัสลูกค้า
  serviceType     ServiceType // ประเภทบริการ
  description     String?     // รายละเอียดงาน
  status          JobStatus   @default(NEW)
  priority        Priority    @default(MEDIUM)
  scheduledDate   DateTime?   // เวลานัดหมาย (ใช้เป็นหลัก)
  completedAt     DateTime?   // เวลาที่เสร็จ
  assignedUserId  String?     // รหัสพนักงานที่รับผิดชอบ (ใช้เป็นหลัก)
  price           Decimal?    @db.Decimal(10, 2) // ราคาบริการ
  notes           String?     // หมายเหตุเพิ่มเติม
  n8nWorkflowId   String?     // รหัส N8N workflow
  webhookData     Json?       // ข้อมูลดิบจาก webhook

  // Story 2.5: Checklist Template Integration
  checklistTemplateId String?   // รหัส Checklist Template สำหรับ Story 2.5
  itemStatus         Json?     // สถานะของแต่ละรายการ checklist (Record<string, boolean>)
  checklistCompletedAt DateTime? // เวลาที่ทำ checklist เสร็จสิ้น

  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  // Relations
  customer         Customer          @relation(fields: [customerId], references: [id], onDelete: Restrict)
  assignedUser     User?             @relation("AssignedUser", fields: [assignedUserId], references: [id], onDelete: SetNull)
  qualityChecks    QualityCheck[]
  training         TrainingWorkflow?
  webhookLogs      WebhookLog[]
  serviceHistories ServiceHistory[]

  // Story 2.5: Checklist Template Relationship
  checklistTemplate ChecklistTemplate? @relation("JobChecklistTemplate", fields: [checklistTemplateId], references: [id], onDelete: SetNull)

  // Indexes สำหรับ Performance
  @@index([customerId])
  @@index([status])
  @@index([assignedUserId])
  @@index([scheduledDate])
  @@index([createdAt])
  @@index([priority])
  @@index([serviceType])
  // Composite indexes สำหรับ query ที่ซับซ้อน
  @@index([customerId, status])
  @@index([assignedUserId, status])
  @@index([status, priority])
  // Story 2.5: Checklist Template Indexes
  @@index([checklistTemplateId])
  @@index([checklistCompletedAt])
  @@map("jobs")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique // อีเมลสำหรับเข้าสู่ระบบ
  name      String           // ชื่อผู้ใช้
  password  String           // รหัสผ่านที่เข้ารหัสแล้ว
  role      UserRole @default(OPERATIONS)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  assignedUserJobs Job[]            @relation("AssignedUser")
  serviceHistories ServiceHistory[] @relation("TechnicianServiceHistory")

  // Indexes
  @@index([role])
  @@index([isActive])
  @@index([email])
  @@map("users")
}

// =============================================================================
// QUALITY CONTROL SYSTEM - ระบบควบคุมคุณภาพ
// =============================================================================

model QualityCheck {
  id          String           @id @default(cuid())
  jobId       String           // รหัสงาน
  checklistId String           // รหัสเช็คลิสต์
  status      QCStatus         @default(PENDING)
  completedBy String?          // ผู้ตรวจสอบ
  completedAt DateTime?        // เวลาที่ตรวจสอบเสร็จ
  notes       String?          // หมายเหตุการตรวจสอบ
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  // Relations
  job         Job              @relation(fields: [jobId], references: [id], onDelete: Cascade)
  checklist   ChecklistTemplate @relation(fields: [checklistId], references: [id], onDelete: Restrict)

  // Indexes
  @@index([jobId])
  @@index([status])
  @@index([createdAt])
  @@index([checklistId])
  @@map("quality_checks")
}

model ChecklistTemplate {
  id          String         @id @default(cuid())
  name        String         // ชื่อเช็คลิสต์
  description String?        // คำอธิบาย
  serviceType ServiceType?   // ประเภทบริการ (CLEANING, TRAINING) - สำหรับ Story 2.5
  category    String         @default("QUALITY_CONTROL") // QUALITY_CONTROL, TEMPLATE
  isTemplate  Boolean        @default(false) // true สำหรับ Story 2.5 templates
  items       Json           // รายการเช็คลิสต์ (JSON array)
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  // Relations
  qualityChecks QualityCheck[] // Backward compatibility
  jobsUsingTemplate Job[] @relation("JobChecklistTemplate") // Story 2.5 relationship

  // Indexes
  @@index([isActive])
  @@index([name])
  @@index([serviceType])
  @@index([category])
  @@index([isTemplate])

  // Unique constraint สำหรับ templates เท่านั้น
  @@unique([name, serviceType], map: "unique_template_name_service")

  @@map("checklist_templates")
}

// =============================================================================
// TRAINING WORKFLOW SYSTEM - ระบบการฝึกอบรม
// =============================================================================

model TrainingWorkflow {
  id                String          @id @default(cuid())
  jobId             String          @unique // งานหนึ่งมีการฝึกอบรมได้เพียงหนึ่งเดียว
  status            TrainingStatus  @default(AWAITING_DOCUMENTS)
  documentsReceived Boolean         @default(false)
  trainingCompleted Boolean         @default(false)
  notes             String?         // หมายเหตุการฝึกอบรม
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  // Relations
  job               Job             @relation(fields: [jobId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([status])
  @@index([createdAt])
  @@map("training_workflows")
}

// =============================================================================
// WEBHOOK & INTEGRATION SYSTEM - ระบบรับข้อมูลจากภายนอก
// =============================================================================

model WebhookLog {
  id            String        @id @default(cuid())
  source        String        // แหล่งที่มา เช่น 'N8N', 'LINE_OA'
  workflowId    String?       // รหัส workflow
  executionId   String?       // รหัสการรัน
  payload       Json          // ข้อมูลดิบที่ได้รับ
  status        WebhookStatus @default(RECEIVED)
  processedAt   DateTime?     // เวลาที่ประมวลผลเสร็จ
  errorMessage  String?       // ข้อความ error (ถ้ามี)
  createdJobId  String?       // รหัสงานที่สร้างขึ้น
  retryCount    Int           @default(0) // จำนวนครั้งที่ลองใหม่
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  // Relations
  createdJob    Job?          @relation(fields: [createdJobId], references: [id], onDelete: SetNull)

  // Indexes
  @@index([source])
  @@index([status])
  @@index([createdAt])
  @@index([workflowId])
  @@index([processedAt])
  @@map("webhook_logs")
}

model FailedWebhook {
  id            String    @id @default(cuid())
  originalLogId String    // รหัส webhook log ต้นฉบับ
  payload       Json      // ข้อมูลที่ประมวลผลไม่สำเร็จ
  errorDetails  String    // รายละเอียด error
  failedAt      DateTime  @default(now())
  retryAfter    DateTime? // เวลาที่จะลองใหม่
  manualReview  Boolean   @default(false) // ต้องตรวจสอบด้วยมือ

  // Indexes
  @@index([failedAt])
  @@index([manualReview])
  @@index([retryAfter])
  @@map("failed_webhooks")
}

// =============================================================================
// SERVICE HISTORY SYSTEM - ระบบประวัติการให้บริการ
// =============================================================================

model ServiceHistory {
  id            String   @id @default(cuid())
  customerId    String   // รหัสลูกค้า (บังคับ)
  jobId         String?  // รหัสงาน (อาจไม่มี สำหรับบริการแบบ walk-in)
  serviceDate   DateTime // วันที่ให้บริการ (บังคับ)
  technicianId  String   // รหัสช่างผู้ให้บริการ (บังคับ)
  serviceType   String   // ประเภทบริการ (บังคับ)
  qualityScore  Decimal? @db.Decimal(3, 2) // คะแนนคุณภาพ 0.00-10.00 (ไม่บังคับ)
  duration      Int?     // ระยะเวลาให้บริการ (นาที)
  notes         String?  // หมายเหตุเพิ่มเติม
  isCompleted   Boolean  @default(true) // สถานะการให้บริการเสร็จสิ้น
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations - ความสัมพันธ์ที่รักษา Data Integrity
  customer      Customer @relation(fields: [customerId], references: [id], onDelete: Restrict)
  job           Job?     @relation(fields: [jobId], references: [id], onDelete: SetNull)
  technician    User     @relation("TechnicianServiceHistory", fields: [technicianId], references: [id], onDelete: Restrict)

  // Performance Indexes - ออกแบบสำหรับ query patterns ที่คาดการณ์ไว้
  @@index([customerId]) // สำหรับดูประวัติลูกค้า
  @@index([technicianId]) // สำหรับดูผลงานช่าง
  @@index([serviceDate]) // สำหรับค้นหาตามช่วงวันที่
  @@index([serviceType]) // สำหรับรายงานตามประเภทบริการ
  @@index([qualityScore]) // สำหรับรายงานคุณภาพ
  @@index([isCompleted]) // สำหรับติดตามสถานะ

  // Composite Indexes สำหรับ Complex Queries
  @@index([customerId, serviceDate]) // ประวัติลูกค้าเรียงตามวันที่
  @@index([technicianId, serviceDate]) // ผลงานช่างเรียงตามวันที่
  @@index([serviceType, serviceDate]) // รายงานบริการตามช่วงเวลา
  @@index([customerId, serviceType]) // ประวัติบริการแต่ละประเภทของลูกค้า

  @@map("service_histories")
}

// =============================================================================
// AUDIT SYSTEM - ระบบการติดตามการเปลี่ยนแปลง
// =============================================================================

model AuditLog {
  id        String   @id @default(cuid())
  entityType String  // ประเภทข้อมูล เช่น 'Customer', 'Job'
  entityId   String  // รหัสข้อมูล
  action     String  // การกระทำ เช่น 'CREATE', 'UPDATE', 'DELETE'
  oldValues  Json?   // ค่าเดิม (ก่อนเปลี่ยน)
  newValues  Json?   // ค่าใหม่ (หลังเปลี่ยน)
  userId     String? // ผู้ทำการเปลี่ยนแปลง
  timestamp  DateTime @default(now())

  // Indexes
  @@index([entityType, entityId])
  @@index([timestamp])
  @@index([userId])
  @@index([action])
  @@map("audit_logs")
}