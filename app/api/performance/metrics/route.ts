// Performance Metrics API
// Generated by Database Agent (Alex)

import { NextRequest, NextResponse } from 'next/server';
import { requirePermission } from '@/lib/middleware/auth-utils';
import { performanceMonitor } from '@/lib/monitoring/performance-monitor';
import { cache } from '@/lib/utils/connection-pool';

/**
 * GET /api/performance/metrics
 * Get real-time performance metrics
 */
@requirePermission('admin', 'read')
export async function GET(request: NextRequest) {
  try {
    const realtimeMetrics = performanceMonitor.getRealtimeMetrics();
    const cacheStats = cache.getStats();

    const metrics = {
      timestamp: new Date(),
      database: realtimeMetrics,
      cache: cacheStats,
      system: {
        memory: {
          used: Math.round(process.memoryUsage().heapUsed / 1024 / 1024),
          total: Math.round(process.memoryUsage().heapTotal / 1024 / 1024)
        },
        uptime: process.uptime()
      }
    };

    return NextResponse.json(metrics);

  } catch (error) {
    console.error('Performance metrics error:', error);
    return NextResponse.json(
      { error: 'Failed to fetch performance metrics' },
      { status: 500 }
    );
  }
}

/**
 * DELETE /api/performance/metrics
 * Clear performance metrics history
 */
@requirePermission('admin', 'write')
export async function DELETE(request: NextRequest) {
  try {
    performanceMonitor.clearMetrics();
    cache.clear();

    return NextResponse.json({
      success: true,
      message: 'Performance metrics cleared',
      timestamp: new Date()
    });

  } catch (error) {
    console.error('Clear metrics error:', error);
    return NextResponse.json(
      { error: 'Failed to clear performance metrics' },
      { status: 500 }
    );
  }
}