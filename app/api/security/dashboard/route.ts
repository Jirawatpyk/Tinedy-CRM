// Security Dashboard API Endpoint
// Generated by Database Agent (Alex)

import { NextRequest, NextResponse } from 'next/server';
import { requirePermission } from '@/lib/middleware/auth-utils';
import { securityDashboard } from '@/lib/monitoring/security-dashboard';
import { securityMonitor } from '@/lib/monitoring/security-monitor';

/**
 * GET /api/security/dashboard
 * Get security dashboard data
 */
@requirePermission('admin', 'read')
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const timeRange = parseInt(searchParams.get('timeRange') || '24');

    // Validate time range
    if (timeRange < 1 || timeRange > 168) { // Max 1 week
      return NextResponse.json(
        { error: 'Time range must be between 1 and 168 hours' },
        { status: 400 }
      );
    }

    const data = await securityDashboard.getDashboardData(timeRange);

    return NextResponse.json(data);

  } catch (error) {
    console.error('Security dashboard error:', error);
    return NextResponse.json(
      { error: 'Failed to fetch security dashboard data' },
      { status: 500 }
    );
  }
}

/**
 * POST /api/security/dashboard/scan
 * Run security scan
 */
@requirePermission('admin', 'write')
export async function POST(request: NextRequest) {
  try {
    const issues = await securityMonitor.runSecurityScan();

    return NextResponse.json({
      success: true,
      issues,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('Security scan error:', error);
    return NextResponse.json(
      { error: 'Failed to run security scan' },
      { status: 500 }
    );
  }
}